<?xml version="1.0" encoding="UTF-8"?>
<project name="Code.Util" default="build" basedir=".">
	
	<property file="build.properties"/>
	
	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpath="tools/google-closure/compiler.jar" />
	
	<taskdef name="jshint" classname="com.philmander.jshint.JsHintAntTask" classpath="tools/ant-jshint-0.3.6/ant-jshint-0.3.6-SNAPSHOT-deps.jar" />
	
	
	
	<target name="build">
		
		<buildnumber/>
	
		<echo>Building = ${project.build.version}</echo>
		
		<!-- Delete and re-create working and artifact directory -->
		<delete dir="${project.build.workdir}"/>
		<delete dir="${project.build.artifactdir}/${project.build.version}"/>
		
		<mkdir dir="${project.build.workdir}"/>
		<mkdir dir="${project.build.artifactdir}/${project.build.version}"/>
		
		<antcall target="checkJS" />
		
		<antcall target="buildJs">
			<param name="engine" value=""/>
		</antcall>
		
		<antcall target="buildJs">
			<param name="engine" value=".jquery"/>
		</antcall>
		
		<antcall target="buildLibs" />
		
		<antcall target="moveToArtifact" />
				
	</target>
	
	
	
	<target name="checkJS">
		
		<jshint dir="${project.src.dir}" jshintSrc="tools\jshint-2.4.3\jshint.js" options="es3=true,browser=true,jquery=true,undef=true,unused=vars,strict=false,noarg=true,plusplus=false,curly=true,trailing=true">
			<include name="**/*.js"/>
			<exclude name="**/*.min.js"/>
			<exclude name="**/lib/*.js"/>
		</jshint>
		
	</target>
	
	
	
	<target name="buildJs">
		
		<concat destfile="${project.build.workdir}/code.util${engine}-${project.build.version}.js">	
			
			<fileset dir="." includes="${project.src.dir}/util.js" />
			<fileset dir="." includes="${project.src.dir}/browser.js" />
			<fileset dir="." includes="${project.src.dir}/events${engine}.js" />
			<fileset dir="." includes="${project.src.dir}/dom${engine}.js" />
			<fileset dir="." includes="${project.src.dir}/animation.js" />
			<fileset dir="." includes="${project.src.dir}/touchelement.js" />
			<fileset dir="." includes="${project.src.dir}/touchelement.class.js" />
			
		</concat>
		
		<antcall target="versionStamp">
			<param name="filePath" value="${project.build.workdir}/code.util${engine}-${project.build.version}.js"/>
		</antcall>
		
		<antcall target="minimizeJS">
			<param name="dir" value="${project.build.workdir}" />
			<param name="file" value="code.util${engine}-${project.build.version}.js"/>
			<param name="output" value="${project.build.workdir}/code.util${engine}-${project.build.version}.min.js"/>
		</antcall>
		
		<antcall target="addLicense">
			<param name="file" value="${project.build.workdir}/code.util${engine}-${project.build.version}.min.js"/>
		</antcall>
		
	</target>
	
	
	
	<target name="buildLibs">
		
		<!-- Copy the library folder to the working folder -->
		<copy todir="${project.build.workdir}/lib">
			<fileset dir="${project.src.dir}/lib"/>
		</copy>
		
		
	</target>
	
	
	
	<target name="moveToArtifact">
		
		<copy todir="${project.build.artifactdir}/${project.build.version}">
			<fileset dir="${project.build.workdir}"/>
			<fileset file="MIT-license.txt"/>
			<fileset file="README.md"/>
			<fileset file="${project.src.dir}/change.log"/>
		</copy>
		
		
		<copy todir="${project.build.artifactdir}/${project.build.version}/lib">
			<fileset dir="${project.build.workdir}/lib"/>
		</copy>
		
		<delete dir="${project.build.workdir}" />
		
		<fixcrlf srcdir="${project.build.artifactdir}" includes="**/*.log,**/*.js,**/*.txt,**/*.css,**/*.html" eol="crlf" />
		
	</target>
	
	
	
	<!-- Utility tasks -->
	
	<target name="minimizeJS">
	
		<jscomp compilationLevel="simple" debug="false" output="${output}">
			<sources dir="${dir}">
				<file name="${file}" />
			</sources>
		</jscomp>

	</target>
	
	
	<target name="addLicense">
		
		<concat destfile="${file}.tmp">	
			<fileset dir="." includes="${project.src.dir}/version.header.txt" />
			<fileset dir="." includes="${file}" />
		</concat>
		
		<antcall target="versionStamp">
			<param name="filePath" value="${file}.tmp"/>
		</antcall>
		
		<delete file="${file}"/>
		
		<move file="${file}.tmp" tofile="${file}" />
		
	</target>
	
	
	<target name="versionStamp">
		
		<replace file="${filePath}" token="%%version%%" value="${project.build.version}"/>
		<replace file="${filePath}" token="%%year%%" value="${project.build.year}"/>
	
	</target>
	
	
</project>